/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ª–∏—Å—Ç–∏–Ω–≥–æ–≤
 */

const ListingsWatcherService = require('./src/services/listingsWatcherService');

async function testListingsWatcher() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ListingsWatcherService...\n');

    const watcher = new ListingsWatcherService();
    
    try {
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        console.log('üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
        await watcher.initialize();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        console.log('üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è...');
        const message = watcher.formatListingsMessage();
        console.log('–ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è:');
        console.log(message.substring(0, 300) + '...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä —Ü–µ–ª–µ–≤—ã—Ö –º–æ–Ω–µ—Ç
        console.log('\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ —Ü–µ–ª–µ–≤—ã—Ö –º–æ–Ω–µ—Ç:');
        const testSymbols = ['BTCUSDT', 'ETHUSDT', 'TRXUSDT', 'TONUSDT', 'ADAUSDT', 'DOGEUSDT'];
        testSymbols.forEach(symbol => {
            const isTarget = watcher.isTargetCoin(symbol);
            console.log(`${symbol}: ${isTarget ? '‚úÖ –¶–µ–ª–µ–≤–∞—è' : '‚ùå –ù–µ —Ü–µ–ª–µ–≤–∞—è'}`);
        });
        
        console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        
        // –ù–µ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤ —Ç–µ—Å—Ç–µ
        console.log('\nüí° –°–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω–æ –≤ –±–æ—Ç–µ.');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
    testListingsWatcher().catch(console.error);
}